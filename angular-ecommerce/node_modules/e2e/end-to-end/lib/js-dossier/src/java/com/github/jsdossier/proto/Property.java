/*
 Copyright 2013-2015 Jason Leyba

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dossier.proto

package com.github.jsdossier.proto;

/**
 * Protobuf type {@code dossier.Property}
 *
 * <pre>
 * Describes a non-function JavaScript property.
 * </pre>
 */
public final class Property extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:dossier.Property)
    PropertyOrBuilder {
  // Use Property.newBuilder() to construct.
  private Property(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private Property(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final Property defaultInstance;
  public static Property getDefaultInstance() {
    return defaultInstance;
  }

  public Property getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private Property(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.github.jsdossier.proto.BaseProperty.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = base_.toBuilder();
            }
            base_ = input.readMessage(com.github.jsdossier.proto.BaseProperty.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(base_);
              base_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 18: {
            com.github.jsdossier.proto.Comment.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              subBuilder = type_.toBuilder();
            }
            type_ = input.readMessage(com.github.jsdossier.proto.Comment.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(type_);
              type_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jsdossier.proto.Property.class, com.github.jsdossier.proto.Property.Builder.class);
  }

  public static com.google.protobuf.Parser<Property> PARSER =
      new com.google.protobuf.AbstractParser<Property>() {
    public Property parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Property(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<Property> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int BASE_FIELD_NUMBER = 1;
  private com.github.jsdossier.proto.BaseProperty base_;
  /**
   * <code>required .dossier.BaseProperty base = 1;</code>
   */
  public boolean hasBase() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .dossier.BaseProperty base = 1;</code>
   */
  public com.github.jsdossier.proto.BaseProperty getBase() {
    return base_;
  }
  /**
   * <code>required .dossier.BaseProperty base = 1;</code>
   */
  public com.github.jsdossier.proto.BasePropertyOrBuilder getBaseOrBuilder() {
    return base_;
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private com.github.jsdossier.proto.Comment type_;
  /**
   * <code>optional .dossier.Comment type = 2;</code>
   *
   * <pre>
   * HTML snippet declaring the property type. May be omitted if the type is
   * unknown.
   * </pre>
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional .dossier.Comment type = 2;</code>
   *
   * <pre>
   * HTML snippet declaring the property type. May be omitted if the type is
   * unknown.
   * </pre>
   */
  public com.github.jsdossier.proto.Comment getType() {
    return type_;
  }
  /**
   * <code>optional .dossier.Comment type = 2;</code>
   *
   * <pre>
   * HTML snippet declaring the property type. May be omitted if the type is
   * unknown.
   * </pre>
   */
  public com.github.jsdossier.proto.CommentOrBuilder getTypeOrBuilder() {
    return type_;
  }

  private void initFields() {
    base_ = com.github.jsdossier.proto.BaseProperty.getDefaultInstance();
    type_ = com.github.jsdossier.proto.Comment.getDefaultInstance();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasBase()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getBase().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, type_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, type_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static com.github.jsdossier.proto.Property parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Property parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Property parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Property parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.github.jsdossier.proto.Property parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(com.github.jsdossier.proto.Property prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dossier.Property}
   *
   * <pre>
   * Describes a non-function JavaScript property.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dossier.Property)
      com.github.jsdossier.proto.PropertyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.Property.class, com.github.jsdossier.proto.Property.Builder.class);
    }

    // Construct using com.github.jsdossier.proto.Property.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getBaseFieldBuilder();
        getTypeFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      if (baseBuilder_ == null) {
        base_ = com.github.jsdossier.proto.BaseProperty.getDefaultInstance();
      } else {
        baseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (typeBuilder_ == null) {
        type_ = com.github.jsdossier.proto.Comment.getDefaultInstance();
      } else {
        typeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_descriptor;
    }

    public com.github.jsdossier.proto.Property getDefaultInstanceForType() {
      return com.github.jsdossier.proto.Property.getDefaultInstance();
    }

    public com.github.jsdossier.proto.Property build() {
      com.github.jsdossier.proto.Property result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.github.jsdossier.proto.Property buildPartial() {
      com.github.jsdossier.proto.Property result = new com.github.jsdossier.proto.Property(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (baseBuilder_ == null) {
        result.base_ = base_;
      } else {
        result.base_ = baseBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      if (typeBuilder_ == null) {
        result.type_ = type_;
      } else {
        result.type_ = typeBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jsdossier.proto.Property) {
        return mergeFrom((com.github.jsdossier.proto.Property)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jsdossier.proto.Property other) {
      if (other == com.github.jsdossier.proto.Property.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (other.hasType()) {
        mergeType(other.getType());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasBase()) {
        
        return false;
      }
      if (!getBase().isInitialized()) {
        
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jsdossier.proto.Property parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jsdossier.proto.Property) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.github.jsdossier.proto.BaseProperty base_ = com.github.jsdossier.proto.BaseProperty.getDefaultInstance();
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.BaseProperty, com.github.jsdossier.proto.BaseProperty.Builder, com.github.jsdossier.proto.BasePropertyOrBuilder> baseBuilder_;
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    public boolean hasBase() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    public com.github.jsdossier.proto.BaseProperty getBase() {
      if (baseBuilder_ == null) {
        return base_;
      } else {
        return baseBuilder_.getMessage();
      }
    }
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    public Builder setBase(com.github.jsdossier.proto.BaseProperty value) {
      if (baseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        base_ = value;
        onChanged();
      } else {
        baseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    public Builder setBase(
        com.github.jsdossier.proto.BaseProperty.Builder builderForValue) {
      if (baseBuilder_ == null) {
        base_ = builderForValue.build();
        onChanged();
      } else {
        baseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    public Builder mergeBase(com.github.jsdossier.proto.BaseProperty value) {
      if (baseBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            base_ != com.github.jsdossier.proto.BaseProperty.getDefaultInstance()) {
          base_ =
            com.github.jsdossier.proto.BaseProperty.newBuilder(base_).mergeFrom(value).buildPartial();
        } else {
          base_ = value;
        }
        onChanged();
      } else {
        baseBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    public Builder clearBase() {
      if (baseBuilder_ == null) {
        base_ = com.github.jsdossier.proto.BaseProperty.getDefaultInstance();
        onChanged();
      } else {
        baseBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    public com.github.jsdossier.proto.BaseProperty.Builder getBaseBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBaseFieldBuilder().getBuilder();
    }
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    public com.github.jsdossier.proto.BasePropertyOrBuilder getBaseOrBuilder() {
      if (baseBuilder_ != null) {
        return baseBuilder_.getMessageOrBuilder();
      } else {
        return base_;
      }
    }
    /**
     * <code>required .dossier.BaseProperty base = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.BaseProperty, com.github.jsdossier.proto.BaseProperty.Builder, com.github.jsdossier.proto.BasePropertyOrBuilder> 
        getBaseFieldBuilder() {
      if (baseBuilder_ == null) {
        baseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.BaseProperty, com.github.jsdossier.proto.BaseProperty.Builder, com.github.jsdossier.proto.BasePropertyOrBuilder>(
                getBase(),
                getParentForChildren(),
                isClean());
        base_ = null;
      }
      return baseBuilder_;
    }

    private com.github.jsdossier.proto.Comment type_ = com.github.jsdossier.proto.Comment.getDefaultInstance();
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> typeBuilder_;
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public com.github.jsdossier.proto.Comment getType() {
      if (typeBuilder_ == null) {
        return type_;
      } else {
        return typeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public Builder setType(com.github.jsdossier.proto.Comment value) {
      if (typeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        typeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public Builder setType(
        com.github.jsdossier.proto.Comment.Builder builderForValue) {
      if (typeBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        typeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public Builder mergeType(com.github.jsdossier.proto.Comment value) {
      if (typeBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            type_ != com.github.jsdossier.proto.Comment.getDefaultInstance()) {
          type_ =
            com.github.jsdossier.proto.Comment.newBuilder(type_).mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        typeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public Builder clearType() {
      if (typeBuilder_ == null) {
        type_ = com.github.jsdossier.proto.Comment.getDefaultInstance();
        onChanged();
      } else {
        typeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public com.github.jsdossier.proto.Comment.Builder getTypeBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public com.github.jsdossier.proto.CommentOrBuilder getTypeOrBuilder() {
      if (typeBuilder_ != null) {
        return typeBuilder_.getMessageOrBuilder();
      } else {
        return type_;
      }
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> 
        getTypeFieldBuilder() {
      if (typeBuilder_ == null) {
        typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder>(
                getType(),
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      return typeBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:dossier.Property)
  }

  static {
    defaultInstance = new Property(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:dossier.Property)
}

